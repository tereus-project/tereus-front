name: Tests

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install modules
        run: npm install

      - name: Lint
        run: npm run lint -- --max-warnings 0

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install modules
        run: npm install

      - name: Lint
        run: npm run format-check

  # deploy:
  #   name: Deploy app to fly
  #   needs: [lint, format]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl deploy --remote-only
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # sentry:
  #   name: Sentry release
  #   runs-on: ubuntu-latest
  #   needs: [deploy]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "16"
  #     - name: Install modules
  #       run: npm install
  #     - name: Build with sourcemaps
  #       run: npm run build
  #     - uses: getsentry/action-release@v1
  #       with:
  #         environment: "production"
  #         sourcemaps: "./build/index.js.map"
  #       env:
  #         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #         SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  #         SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

  # lighthouse:
  #   runs-on: ubuntu-latest
  #   needs: [deploy]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Audit site using Lighthouse
  #       uses: treosh/lighthouse-ci-action@v9
  #       with:
  #         urls: https://tereus.dev/
  #         # budgetPath: ./budget.json # test performance budgets
  #         uploadArtifacts: true # save results as an action artifacts
  #         temporaryPublicStorage: true # upload lighthouse report to the temporary storage
  #         runs: 3 # number of runs to average the results
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
